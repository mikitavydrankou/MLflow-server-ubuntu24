version: "3.10"

services:
  db:
    restart: always
    image: postgres
    container_name: mlflow_db
    ports:
      - "5423:5432"   
    networks:
      - backend
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DATABASE}
    volumes:
      - db_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD", "pg_isready", "-p", "5432", "-U", "${PG_USER}"]
      interval: 5s
      timeout: 5s
      retries: 3

  tracking_server:
    restart: always
    build: ./mlflow_image
    image: mlflow_server
    container_name: mlflow_server
    depends_on:
      - db
    ports:
      - "5000:5000"
    networks:
      - frontend
      - backend
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      MLFLOW_S3_ENDPOINT_URL: https://fra1.digitaloceanspaces.com
      MLFLOW_S3_IGNORE_TLS: true
    command: >
      mlflow server
      --backend-store-uri postgresql://${PG_USER}:${PG_PASSWORD}@db:5432/${PG_DATABASE}
      --host 0.0.0.0
      --serve-artifacts
      --artifacts-destination s3://${MLFLOW_BUCKET_NAME}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db_data:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
